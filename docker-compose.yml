version: '3.3'

networks:
  my-network-dockerApp:

volumes:
    mysql-db:

services:

    # nginx:
    #     image: nginx:stable
    #     container_name: travellist-nginx
    #     restart: always
    #     ports:
    #         - 8000:80
    #     volumes:
    #         - ./:/var/www
    #         - ./docker-compose/nginx:/etc/nginx/conf.d
    #     networks:
    #         - my-network-dockerApp


    app-dev:
        build:
            context: ./
            dockerfile: ./docker-compose/dockerFIle/Dockerfile.DEV
        container_name: "test-app-container-dev"
        image: "test-app-image-dev"
        
        restart: always
        volumes:
          - ./:/var/www
        environment:
             PROJECT_DB_HOST: "db"
             PROJECT_DB_PORT: "3306"
             PROJECT_DB_DATABASE: "testapp_db"
             PROJECT_DB_USERNAME: "root"
             PROJECT_DB_PASSWORD: ""
             PROJECT_APP_DEBUG: "false"

        ports:
          - "9081:8000"
        depends_on:
            - db
        networks:
            - my-network-dockerApp
        command: bash -c "composer install && php artisan && php artisan migrate && php artisan storage:link && php artisan optimize:clear && php artisan cache:clear && php artisan config:cache &&  php artisan cache:clear && php artisan serve --host=0.0.0.0 "

    # app-prod:
    #     build:
    #         context: ./
    #         dockerfile: ./docker-compose/dockerFIle/Dockerfile.PROD
    #     container_name: "test-app-container-prod"
    #     image: "test-app-image-prod"
    #     restart: always
    #     environment:
    #          PROJECT_DB_HOST: "db"
    #          PROJECT_DB_PORT: "3306"
    #          PROJECT_DB_DATABASE: "testapp_db"
    #          PROJECT_DB_USERNAME: "root"
    #          PROJECT_DB_PASSWORD: ""
    #          PROJECT_APP_DEBUG: "true"

    #     ports:
    #       - "9088:8000"
    #     depends_on:
    #         - db
    #     networks:
    #         - my-network-dockerApp

    db:
        image: mysql:latest
        container_name: mysql
        command: --default-authentication-plugin=mysql_native_password
        restart: always
        ports:
        - '6603:3306'
        environment:
            MYSQL_DATABASE: 'testapp_db'
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
            MYSQL_ROOT_PASSWORD: ""
    #        or
    #        MYSQL_DATABASE: ""
    #        MYSQL_USER: ""
    #        MYSQL_ROOT_PASSWORD: ""
    #        MYSQL_PASSWORD: ""

        volumes:
            - mysql-db:/var/lib/mysql
        # - /.docker/db_backup:/docker-entrypoint-initdb.d
        #   # - ./mysql/config:/etc/mysql
        networks:
            - my-network-dockerApp


    db-management:
        depends_on:
        - db
        image: phpmyadmin/phpmyadmin
        container_name: phpmyadmin
        restart: always
        ports:
        - '6601:80'
        environment:
            PMA_HOST: db
        networks:
            - my-network-dockerApp

